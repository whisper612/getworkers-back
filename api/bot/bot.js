const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')

module.exports = function(app, bot, telegramObject, telegrafObject, pool) {
	// bot.use(telegrafObject.log())
   
    bot.start((ctx) => {
		console.log('New user has been spotted!')
		if(ctx.chat.type === 'private') {
			return ctx.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üóÑÔ∏è', Markup
			.keyboard([
			['üóÑÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è']
			]).oneTime().resize().extra()
			)
		}
    });
	
	bot.hears('üóÑÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', (ctx) => {
		return ctx.reply('–î–ª—è  –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚òéÔ∏è',
			Extra.markup((markup) => {
				return markup.resize()
				.keyboard([
					markup.contactRequestButton('‚òéÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'),
				]).oneTime()
			})
		)
	})

	bot.on('contact', (ctx, pool) => {
	if (ctx.update.message.contact !== undefined) {

		//–æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ id –≤ DB

		return ctx.reply('–£—Å–ø–µ—à–Ω–æ! –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ üìã', Markup
		.keyboard([
		['üìã –£–∫–∞–∑–∞—Ç—å –∏–º—è']
		]).oneTime().resize().extra()
		)
	}  else {
			return ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏ —è –Ω–µ –ø–æ–ª—É—á–∏–ª –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.', Markup
				.keyboard([
				['üóÑÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è']
				])
				.oneTime()
				.resize()
				.extra()
			)
		}
	})
	
	bot.hears('üìã –£–∫–∞–∑–∞—Ç—å –∏–º—è', (ctx) => {
		ctx.reply("–ù—É, –ø–∏—à–∏ –∏–º—è –±—Ä–∞—Ç–∞–Ω",
			console.log(ctx.update.message.text),
			bot.on('123',
				ctx.reply("–¢—ã –ø–∏–¥–æ—Ä 0)000))0)))0")
			)
		)
	})

    bot.launch()
}
